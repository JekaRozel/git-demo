Java Быстрый старт
JavaCode(.java) -> JAVACcompiller -> ByteColde(.class) -> JVM
 
javax.imageio ImageIO - для вставки картинок  
javax.swing JFrame - новое окно
java.awt Graphics - библиотеки для рисования
java.io IOException - exception

картинки для игры надо помещать в bin/
private static Image drop;
drop = ImageIO.read(GameWindow.class.getResourceAsStream("drop.png"));

	Коллекции в Java:
коллекции - набор объектов либо пара ключ - значение. созданы для big data. 
Набор классов и методов для работы с коллекциями - Java Collections API
Основные 3 типа коллекций
LIST упорядоченный (последовательный)
SET порядок не важен 
MAP пара - ключ-значение.
редкий - Queue(очередь)
  По иерархии:
1)
 интерфейс Iterator <E> ... hasNext(); E next(); void remove(); /есть ли следующий элемент, берём его, удаляем предыдущий.	
 интерфейс Iterable <T> ... Iterarator<T> iterator(); Использует предыдущй интерфейс через метод iterator(), ИСПОЛЬЗУЕТСЯ В collection.
2)
 interface Collection <E> extends Iterable<E>
-int size();  количество элементов
-boolean isEmpty();  проверка на пустоту
-boolean contains(Object element);  содержит ли элемент
-boolean add(E element);  добавление элемента
-boolean remove(Object element);  удаление элемтена
-Iterator<E> iterator(); возвращает iterator 
3)
 множество set	/не может содержать 2 одинаковых элемента.
Включает в себя
 3.1)
    интерфейс SortedSet
 3.2)
  Реализации:
    HashSet<E> используют для сортировки где выводятся только уникальные элеменыт списка(массива). /сравнивает по ссылкам. / Set<E> mas = new HashSet<E>(); /большинство операций за О(1); / хранит в корзинках, которых по умолчанию 16.
    LinkedHashSet<E> /хранит лементы отсортированными в порядке добавления;
    TreeSet<E> implements Sortedset<E> /хранит элементы отсортированными (с помощью красно-черного дерева), большинство операций за O(log(N)); должно сравнивать элементы на входе внутрь множества(упорядочевать при добавленни);     
4)
 List
 4.1) 
    ArrayList<E> на основе массива; сложность добавления О(N), сложность доступа к конкретному элементу О(1)
    LinkedList<E> на основе двусвязного списка; сложность добавления О(1), сложность доступа к конкретному элементу О(N)
// массив строго упорядоченое расположение
в списке объект хранит ссылки на пердыдущий и следующий объекты.
односвязный только на следующий
двусвязный на предыдущий и следующий
 4.2)
    Мар<K, V>
    -HashМар<K, V>	большинсто операций за О(1)
    -TreeMap<K, V>  хранит данные уррорядочено по ключам
    -LinkedHasMap<K, V>  хранит в порядке добавления ключей.
// по сути HashSet это упрощённый HashMap у которого второе значение постоянно / HashSet<E> HashMap<E, CONSTANT>

	Stream API. (не I/O)
java.util.stream.
Stream API поток представляет канал передчи данных из источника данных (файлы, массивы, коллекции). 
 !не путать с I/O (многопоточность, inputStream, outputStream)
Стримы можно создать из коллекции, из значений, из массив и т.д


























////
почитать бинарные деревья
синхронизацию коллекций
абстрактные методы 
абстрактный класс может содержать обычные методы и абстрактные, не может объекты.
если класс содержит хотя бы один абстрактный метод, то он обязан быть сам абстрактным.
Байт-код Java — набор инструкций, исполняемых виртуальной машиной Java. Каждый код операции байт-кода — один байт. Используются не все 256 возможных значений кодов операций. 51 из них зарезервированы для использования в будущем.
 SOLID — это аббревиатура пяти основных принципов проектирования в объектно-ориентированном программировании — Single responsibility, Open-closed, Liskov substitution, Interface segregation и Dependency inversion. В переводе на русский: принципы единственной ответственности, открытости / закрытости, подстановки Барбары Лисков, разделения интерфейса и инверсии зависимостей

ArrayList array = new ArrayList(2);
в данном случае двойка означает размер конейнера, т.е. всего зарезервировано место под два элемента. В действительности, размер контейнера равен нулю, т.к. в нём пока нет элементов
ArrayList это списочный последовательный контейнер и элементы в нём хранятся в порядке добавления
array.add(1, 7);
означает, цифру семь нужно вставить в первый элемент, т.к. этот контейнер последовательный и порядок добавления в него слева направо, то при добавлении элемента, цифра шесть сместиться вправо и станет вторым элементом в контейнере


