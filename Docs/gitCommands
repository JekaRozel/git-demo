Sзагрузить можн git-scm.com/downloads
---
…or create a new repository on the command line
echo "# Repo" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:JekaRozel/Repo.git
git push -u origin master
-
…or push an existing repository from the command line
git remote add origin git@github.com:JekaRozel/Repo.git
git push -u origin master
---
git clone "ключ с гита" загрузить с гитхаба
ssh-keygen -t rsa -b 4096 -C "commentsMayUseEmail" можно и без -b 4096
git config --global user.name "name"
git config --global user.email "email"
git config --list --show-origin 
git remote -v проверка что мы в origin
git status преверка что ждёт коммита
git add file добавляем в коммит ожидающий файл
git commit -m "comments" создание коммита с коментарием
git log следим за коммитами
git push отправление с локального на удалённый репозиторий (синхронизация)
git pull (сочетает git fetch и git merge) подтягивание с удалённого на локальный репозиторий
git pull origin ветвь - подтягивания конкретной ветви

 Локальыне ветви
git branch посмотреть в какаой ты ветке
git branch --list посмотреть список ветвей   q - выйти из списка
git checkout имя - переключение на ветвь "имя"
git checkout имя^ - переключение на родителя ветви "имя".(^^ - прарoдителя и т.д.)
git branch -f master HEAD~3 (-forced - принудительно) перенести ветку master на 3 коммита выше HEAD
git reset HEAD (можно ~n) на предыдущий коммит в локале
git revert HEAD отмена изменений в онлайн репозитории (появляется коммит с отменёнными изменениями)
git cherry-pick <Commit1> <Commit2> <...> копировать несколько коммитов на место, где сейчас находишься (HEAD)
git rebase someBranch копирует набор коммитов(из той где сейчас(HEAD) и переносит их в другое место (в конец someBranch, поэтому ещё из someBranch надо rebase HEAD) 
git rebase -i (HEAD~n) (работa с n количеством коммитов) (pick - переключение его означает, что нужно выкинуть коммит.)

 Удалённые ветви
git fetch --all извлекаем последние изменения из удалённого репозитория
git branch --r список ветвей удалённого репозитория
git branch -a   (всё)где я и какие ещё есть.
git branch имя - создание новой ветви с именем "имя"
git branch -m новоеИмя - изменить имя текущей ветви
git branch -m имя новоеИмя - изменить имя другой(не той в которой находитесь) ветви
git branch -d имявети - удалить ветвь (безопасно, проверяет все ли изменнения закомичены и внесены)
git branch -D имяветви - удалить принудительно
git bracnh --delete имяветви  - удалить remote-ветвь 

 работа с предыдущими ветками
git log - список коммитов
git show fe83f9 - посмотреть изменения
git diff 0ef9fe..f39fe8 - разницa между коммитами (лучше git difftool)
git checkout mk3l43h3 File.txt - откатываем File.txt к коммиту номер mk3l43h3
git revert HEAD - исправление последнего 
git revert er8f8ww - исправление коммита номер er8f8ww 

при конфликтах надо исправлять вручную, затем add & commit 

в файле .gitignore перечисляем те файлы которые нам не надо коммитить, а сам файл .gitignore добовляем (add-commit-push).

git remote add origin https://github.com/jekarozel/git-demo.git (url писал из головы, что-то похожее) push в пустой репозиторий.

git gui & графический(текстовй интерфейс) /rescann(перечитать). кликать на иконку
gitk графическое отображение (для ветвения)


