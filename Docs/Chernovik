sysstat	/ mpstat | grep -A 5 "%idle" | tail -n 1 | awk -F " " '{print 100 - $ 12}'a

<img src="{...}"> в кавычках твои данные
linux neofetch 	miral-shell
для облегчения elementary: 
создал файл 
/etc/environment:
CLUTTER_PAINT=disable-clipped-redraws:disable-culling
CLUTTER_VBLANK=none

sudo apt install software-properties-common python-software-properties установка ppa репозиториев
sudo cat /proc/sys/vm/swappiness размер файла swap
https://www.udemy.com/ru/topic/java/free/
выполнить файл(установка идеи) ./idea.sh
lsof список процессов запущенных приложением

Для курса Стэпик джаваВэбСервер
Что из этого я знаю:
Примитивные типы, переполнение примитивных типов
Объекты, классы, наследование , полиморфизм, инкапсуляция
Область видимости переменой, статические переменные
Ветвления и циклы
Преобразования примитивных типов
Интерфейс, реализация интерфейса
Операторы
Стек, куча
private, protected, public
Reflection(позволяет узнать какого класса Объект и внутренности)

export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64

wiki.jetbrains.net/intellij/Creating_and_importing_Maven_projects

127.0.0.1
80 - стантдартный порт для HTTP запросов
apt (для дебиан) - yum
классификация gTLD (generic Top-Level Domains), куда вошли домены .com, .edu, .net, .org, .int, .gov и .mil. 

 feature branches (изолированная работа каждого разработчика над своей задачей)
 
 Что надо бы знать:
tmux veget git htop zsh
разница между flatpack и snap
google stadia
hebernate, сервера на java (tomcat и jeti для web) (jboss и glassfish)
Spring Core, Spring Boot, Spring NVC, Timelive, Spring Data (JDBC). Что это, для чего и как использовать. Почитать Spring in action. сайт https://mkyong.com/ 

x.toString(), Integer.toString(x); ""+x;
String.valueOf(x); Integer.valueOf(x);
int a = Integer.parseInt(str);
String.join(" ", words)//массив words через пробел в строку.
char []c = str.toCharArray();

softScills:
общение, английский, публичные выступления, определиться чего я хочу. !!!!Мониторить что востребовано в вакансиях
Practice: CodeGym, Java Revisited

============================================ВАЖНО=====================================================================================
	junior должен знать: 
Принципы ООП хорошо знать, ЯП, методы объекта Object, основные коллекшен фреймоворки и интерфейсы, понятие о многопоточности, SQL(лучше posgrest не mySQL), стек технологий hibernate, Spring core boot date jdbc, rеs(json) сервисы. !!!Алгоритмы - поверхностно, справочники - для справки???
	Книги: 
1) Философия Java, Хеад Ферст
2) Чистый код, Рефакторинг Фаулера
3) Java Softwear Development Principals Patterns and practices Robert Martin Только в оригинале.
	junior должен начинать с:
core языка, английский, выполнять все примеры из литературы, не сходить с выбранного пути.
---------
    Теория из видосов немчинского.
Путаница версий java: 1; java 2 - java 2(1.4); 5(java2 (1.5)); 6(java 2 (1.6))...
cms content menegment systems (системы управления контентом) WorldPress Joomla
для микросервисов используют spring.
	парадигма - способ мышления (восприятия).
компиляция - превращени исходного кода в машинный кода / компайл тайм - процесс превращения исходного кода в бинарный (javac поиск зависимостей библиотек) \ ран тайм
API application programming interface - то через что работают с объектом должно быть public (остальное private). Этим определяется уровень доступа (инкапсуляции). Static - значит что это общий (метод/поле) для всех обектов этого класса. То что не Static относится к конкретному эеземпляру объекта. (лучеше не использовать).
JDBC (java data base connectivity) драйвер для баз данных.
JPA java persistans architect 
не стоит тратить сейчас время на Swing/SWT и FX (для ui). Отдать пердпочтение веб интерфейсу и спрингу.
JSP java server pages (для веба)
Доменная модель. начинаем писать приложение с "декомпозиции предметной области" - выписываем все объекты которые будут задействованы определяем их свойства. дальше бизнес логика(логика взаимодействий между объектами), DAO (data access logic) работа с базой данных, UI слой. Это интерпрайз паттерн domain model.   	
---------
road map ха-ха:
Head First Java, EduTools IDE, тесты, смежные технологии (frontend, HTTP, web API приложения реализуемые RESTful or GraphQL, JSON or XML),(backend, web-сервер, SQL #Head First, JavaScript(vaadin сам собирает Javascript); Pet project, Spring(Core, MVC, Web-MVC, Security) (JHipster - кодогенератор), тестирование кода - JUnit or Mockito. Sonar - валидация кода, Hadoop -большой объем данных, управление жизненным циклом ПО - Maven/Gradle. 
---------
	Список полезностей java с proglib.com
    Youtube:
 https://www.youtube.com/watch?v=T8RqyoaVZD8&list=PLNclrLF8MXOy4-HOn6_YyuDKfzGK1nTl-
 https://www.youtube.com/watch?v=wGWZRAAvzkU
 https://www.youtube.com/watch?v=TPJq5U2KoI8
 https://www.youtube.com/watch?v=rrsdVOAL254&list=PLxbCrqzAmccufGafo-VlAwpJ4uU4zmtyG
----------------
 https://www.youtube.com/watch?v=PeuIq0Sj0wM  /what should know
 https://www.youtube.com/watch?v=ua-aaYojPb0&list=PLlAN9g9JWTzPycUWMJRlQ1kb-hQNUL5Uh   /gui
 https://www.youtube.com/watch?v=QLtk1jD6V4Y&list=PLoij6udfBnchZ36TWDdiQsPArx-ON-1GM  /maven
 https://www.youtube.com/watch?v=JWNU2gnaHHA&list=PLoij6udfBncjXbiZ6pmX-chxQNjANR2Gh  /WebSockets
 https://www.youtube.com/watch?v=HX0q3vW4nVQ&list=PLwwk4BHih4fiKbIAenL1UOdakUUsW9zf7 /Web-сервис на Java
 https://www.youtube.com/watch?v=1qYOxJ-OEWs&list=PLi3gxGWPyGGQsEZyjQNPoUEHwNtxiMf-0  /Hibernate
 https://www.youtube.com/user/derekbanas/featured
 https://www.youtube.com/user/thenewboston/featured
 https://www.youtube.com/user/vitaxafication/featured
  https://www.youtube.com/user/KharkovITCourses
 https://www.youtube.com/user/ytkach
 https://www.lektorium.tv/speaker/3109
 https://www.youtube.com/channel/UCnAdXkr17iQS8YcYl0LhPdw
 https://www.youtube.com/channel/UCO9JvZ75Usyzgd1puurLF6A


  Books:
 Java. Эффективное программирование 2 edition – Дж. Блох
 Java. Библиотека профессионала 1, 2 тома – К. Хорстманн, Г. Корнелл
 Изучаем Java – К. Сьерра, Б. Бэйтс
 Java 8. Руководство для начинающих – Г. Шилдт	
 Clean code
 Head First. Паттерны проектирования – Эрик Фримен, Элизабет Робсон
 Алгоритмы на Java – Роберт Седжвик, Кевин Уэйн
--- Test Driven: TDD and Acceptance TDD for Java Developers – Lasse Koskela
 Алгоритмы на Java – Роберт Седжвик, Кевин Уэйн
 Head First Object-Oriented Analysis and Design – Brett D. McLaughlin 
 Java. Полное руководство – Герберт Шилдт
 Философия Java — Брюс Эккель
 Java Concurrency in Practice — Goetz B., Peierls T.
 Паттерны проектирования — Эрик Фримен, Элизабет Фримен
  Java Puzzlers — Joshua Bloch
  Java в примерах — Дэвид Флэнаган
 Язык программирования Java SE 8. — Джеймс Гослинг, Билл Джой
  Структура данных и алгоритмы Java — Роберт Лафоре

Раннее связывание - мы знаем или передаём известное значение Shape a = new Circle(20)
Позднее - мы узнаем после компиляции int res = circle.square();
 класс наследник не обязан реализовывать все методы родителя? а наследник интерфейса(от интерфейса) должен реализовывать все методы родителя и так же деда, прадеда, ...
 Класс может содержать 4 виды внутреннийх классов: 
-внутренний каласс;
-локальный внутренний класс; (находится внутри метода)(метод возвращающий объект класса - фабричный метод) (может быть безымянным, 
-статический внутренний класс; (имеет доступ только к статическим полям и методам внешнего класса).
 Многопоточность. Класс thread Runnable
 java.io. - файловые потоки ввода-вывода.
 str.split(" ")
 Рефлексия java.lang.reflect. Constructor/Field/Method/Modifier (всё через массив).
 сериализация (обязательно - implements Serializable) разбивка на байты для передачи. десериализация - сборка из байтов. 
-анонимный внутренний класс;.
  Generic - контейнеры, коллекции. Доступ: прямой и последовательный. (java.util....)
Set не может хранить одинаковые значения. Разница между hash/tree/list set в варианте хранения (последовательности/упорядоченности) элементов. 
 list offer статвит элемент в очередь. poll получаем и удаляем из очереди, peek получаем не удаляя.
 Vector
 Stack последний зашёл - первый вышел.
 map (key + value) : hashTable, LinkedHashMap, TreeMap. Entry<obj : obj> entry : map.entrySet() - для перебора.




