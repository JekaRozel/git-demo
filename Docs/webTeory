	Прикладная программа или приложение — программа, предназначенная для выполнения определённых задач и рассчитанная на непосредственное взаимодействие с пользователем.
	Браузер — прикладное программное обеспечение для просмотра веб-страниц, содержания веб-документов, компьютерных файлов и их каталогов; управления веб-приложениями; а также для решения других задач. Известные браузеры: Chrome, Opera, Safari etc.
	Среда передачи данных  — физическая субстанция, по которой происходит передача (перенос) той или иной информации (данных) от источника (передатчика, отправителя) к приёмнику (получателю). Информация переносится с помощью сигналов. Сигналы могут иметь различную природу.
	Сетевой протокол — набор правил и действий (очерёдности действий), позволяющий осуществлять соединение и обмен данными между двумя и более включёнными в сеть устройствами.
	Стек протоколов — это иерархически организованный набор сетевых протоколов, достаточный для организации взаимодействия узлов в сети. Протоколы работают в сети одновременно, значит работа протоколов должна быть организована так, чтобы не возникало конфликтов или незавершённых операций. Поэтому стек протоколов разбивается на иерархически построенные уровни, каждый из которых выполняет конкретную задачу — подготовку, приём, передачу данных и последующие действия с ними.
	Сетевая карта (плата, адаптер) — дополнительное устройство, позволяющее компьютеру взаимодействовать с другими устройствами сети.  
	MAC-адрес (от англ. Media Access Control — управление доступом к среде, также Hardware Address) — уникальный идентификатор, присваиваемый каждой единице активного оборудования или некоторым их интерфейсам в локальных компьютерных сетях.
	Локальная компьютерная сеть (англ. Ethernet от англ. ether — «эфир» и англ. network — «сеть, цепь») — семейство технологий пакетной передачи данных между устройствами для компьютерных и промышленных сетей.
	IP-адрес — уникальный 32-разрядный адрес узла в сети TCP/IP или общедоступной сети.
	Маска подсети — 32-разрядное число, используемое для выделения составляющих сети и узла в IP-адресе.
	Подсеть – сеть меньшего размера, созданная путем разбиения более крупной сети на равные части.
	Узел сети (англ. node) — устройство, соединённое с другими устройствами как часть компьютерной сети. Узлами могут быть компьютеры, мобильные телефоны, карманные компьютеры, а также специальные сетевые устройства, такие как маршрутизатор, коммутатор или концентратор.
	Сетевой шлюз — аппаратный маршрутизатор или программное обеспечение для сопряжения компьютерных сетей, использующих разные протоколы (например, локальной и глобальной).
	Маршрутизатор — устройство, которое пересылает пакеты между различными сегментами сети на основе правил и таблиц маршрутизации.
	Таблица маршрутизации — электронная таблица (файл) или база данных, хранящаяся на маршрутизаторе или сетевом компьютере, которая описывает соответствие между адресами назначения и интерфейсами, через которые следует отправить пакет данных до следующего маршрутизатора, а в некоторых случаях метрики (дистанции) связанные с этими маршрутами.
	Маршрутизация (англ. Routing) — процесс определения маршрута следования данных в сетях связи.
	Пакет — это определённым образом оформленный блок данных, передаваемый по сети в пакетном режиме.
Следующий шаг
	Транзитный участок, или переход (англ. hop — «прыжок») — участок сети между двумя узлами сети, по которому передаются сетевые пакеты (или датаграммы). Обычно используется для определения «расстояния» между узлами. Чем больше транзитных участков — тем сложнее путь маршрутизации и тем «дальше» находятся узлы друг от друга.
	ARP (англ. Address Resolution Protocol — протокол определения адреса) — протокол в компьютерных сетях, предназначенный для определения MAC-адреса, имея IP-адрес другого компьютера.
	RARP (англ. Reverse Address Resolution Protocol — Обратный протокол преобразования адресов) — протокол сетевого уровня модели OSI, выполняет обратное отображение адресов, то есть преобразует физический адрес в IP-адрес.
	ARP cache — в кэше содержатся IP адреса и соответствующие им аппаратные адреса.
	Unicast или однонаправленная (односторонняя) передача данных подразумевает под собой передачу пакетов единственному адресату.
	Multicast форма широковещания, при которой адресом назначения сетевого пакета является мультикастная группа (один ко многим).
	Широковещательный канал, широковещание (англ. broadcasting) — метод передачи данных в компьютерных сетях, при котором поток данных (каждый переданный пакет в случае пакетной передачи) предназначен для приёма всеми участниками сети.
	DHCP (англ. Dynamic Host Configuration Protocol — протокол динамической настройки узла) — сетевой протокол, позволяющий компьютерам автоматически получать IP-адрес и другие параметры, необходимые для работы в сети TCP/IP.
	Transmission Control Protocol (TCP, протокол управления передачей) — один из основных протоколов передачи данных интернета, предназначенный для управления передачей данных.
	TCP/IP — сетевая модель передачи данных, представленных в цифровом виде. Модель описывает способ передачи данных от источника информации к получателю. В модели предполагается прохождение информации через четыре уровня, каждый из которых описывается правилом (протоколом передачи). Наборы правил, решающих задачу по передаче данных, составляют стек протоколов передачи данных, на которых базируется Интернет.
	Датаграмма (англ. datagram, дейтаграмма) — блок информации, передаваемый протоколом через сеть связи без предварительного установления соединения и создания виртуального канала. Любой протокол, не устанавливающий предварительное соединение (а также обычно не контролирующий порядок приёмо-передачи и дублирование пакетов), называется датаграммным протоколом.
	UDP (англ. User Datagram Protocol — протокол пользовательских датаграмм) — один из ключевых элементов TCP/IP, набора сетевых протоколов для Интернета. С UDP компьютерные приложения могут посылать сообщения (в данном случае называемые датаграммами) другим хостам по IP-сети без необходимости предварительного сообщения для установки специальных каналов передачи или путей данных.
	DNS (англ. Domain Name System — система доменных имён) — компьютерная распределённая система для получения информации о доменах. Чаще всего используется для получения IP-адреса по имени хоста (компьютера или устройства), получения информации о маршрутизации почты, обслуживающих узлах для протоколов в домене.
	Доменное имя — символьное имя, служащее для идентификации областей — единиц административной автономии в сети Интернет — в составе вышестоящей по иерархии такой области.
	hosts — текстовый файл, содержащий базу данных доменных имен и используемый при их трансляции в сетевые адреса узлов.
	HTTP (англ. HyperText Transfer Protocol — «протокол передачи гипертекста») — протокол прикладного уровня передачи данных (изначально — в виде гипертекстовых документов в формате «HTML», в настоящий момент используется для передачи произвольных данных).
	FTP (англ. File Transfer Protocol — протокол передачи файлов) — стандартный протокол, предназначенный для передачи файлов по TCP-сетям (например, Интернет).
	Порт (англ. port) — натуральное число, записываемое в заголовках протоколов транспортного уровня модели OSI (TCP, UDP, SCTP, DCCP). Используется для определения процесса-получателя пакета в пределах одного хоста.
	Рабочее предложение (англ. Request for Comments, RFC) — документ из серии пронумерованных информационных документов Интернета, содержащих технические спецификации и стандарты, широко применяемые во всемирной сети.
	Дата-центр (от англ. data center), или центр (хранения и) обработки данных (ЦОД/ЦХОД) — это специализированное здание для размещения (хостинга) серверного и сетевого оборудования и подключения абонентов к каналам сети Интернет.
	VLAN (аббр. от англ. Virtual Local Area Network) — логическая («виртуальная») локальная компьютерная сеть, представляет собой группу хостов с общим набором требований, которые взаимодействуют так, как если бы они были подключены к широковещательному домену, независимо от их физического местонахождения.
	Virtual Extensible LAN (VXLAN) является технологией сетевой виртуализации, созданной для решения проблем масштабируемости в больших системах облачных вычислений.
	Программно-определяемая сеть или программно-конфигурируемая сеть (англ. software-defined networking, SDN) — сеть передачи данных, в которой уровень управления сетью отделён от устройств передачи данных и реализуется программно.



		Stepic course
	Интернет - глабальная сеть передачи данных
	Протоколы
HTTP, SSH, P2P - прикладные 
DNS - система имен
TCP - надежная последовательная передача данных (передаёт поток)
IP - глобальная адресация, предача с гетерогенной среде (передаёт дейтаграммы, небольшие кусочки данных)
	
		nginx http server
 apache; lighttpd; iis7(microsoft) это альтернативы
sudo /etc/init.d/nginx start/stop/restart
 Файлы сервера:
Config      /etc/nginx/nginx.conf состоит из нескольких файлов  include /etc/nginx/sites-ensbled/*
init-script /etc/init.d/nginx [start|stop|restart]
PID-file    /var/rum/nginx.pid  //Process Identificator, № in htop
Error-log   /var/log/nginx/error.log
Access-log  /var/log/nginx/acces.log

	Процессы web сервера
- Master (root, 1 proces)
 - Чтение и валидация конфига
 - Открытие сокета(сокетов) и логов
 - Запуск и управление дочерними процессами (worker)
 - Graceful restart, Binary Updates
- Worker (www-data, 1+ proceses) //'nobody'
 - Обработка входящих запросов.
	
	Цикл
1 Чтение HTTP запроса
2 Выбор virtual host
3 Выбор location
4 Проверка доступа
5 Чтение файла
6 Применение фильтров
7 Отправка HTTP ответа
8 Запись Access Log
9 Очистка  //ожидание 1 чтения HTTP запроса

	Модульная архитектура
 Web сервер - не монолитный
 Динамическая загрузка моделей - LoadModule
 Этапы обработки запроса и модули
 Дополнительные директивы, контексты
 Примеры: mod_mime, mod_mime_magic, mod_autoindex, mod_rewrite, mod_cgi, mod_perl, mod_gzip.

	Терминология
 virtual host - секция когфига файла сервера, отвечающая за обслуживание определенного домена 
 location- секция когфига, отвечающая за обслужвание определённой группы URL

	Приоритеты location в nginx
- location = /img/1.jpg
- location ^~ /pic/
- location ~* \.jpg$
- location /img/
// при одинаковом приоритете используется тот что стоит выше в конфиге.

	Секции и директивы
- http  - конфигурация для HTTP сервера
- server  - конфигурация домена (вирт. Хоста)
- server_name  - имена доменов
- location  - локейшен, группа URL 
- root, alis  - откуда надо брать файлы
- error_log  - лог ошибок сервера
- access_log  - лог запросов

	Атрибуты фалов и процессов. ( команда терминала ps)
У процесса есть 
 -пользователь;  -группа
У файла/директори есть
 -пользователь/владелец; -группа; права доступа(read/write/execute)

множество потоков - multithreading 
множество процессов prefork, pool of workers
комбинированный подход

	Задачи Frontend (web) сервера
- отдача саттических документов
- проксирование (reverse proxy) передача запросов на веб-сервера
- балансировка нагрузки
- кеширование
- сборка SSI
- авторизация, SSL, нарезка картинок, gzip 

	Reverse proxy (решение проблемы медленных клиентов)
- frontend (медленно) читает запрос от клиента
- frontend (быстро) передаёт запрос свободному backend
- backend генерируем страницу
- bachend (быстро) возвращает ответ frontend серверу
- frontend (медленно) возвращает ответ клиенту
 Результат: backend занят минимально возможное время.
 
	Upstream
 Группа серверов работающих под общим именем
	
	Backend (application) сервер
 Роль applicaton сервера заключается в исполнении бизнес логики приложения и генерации динамических документов.
 На каждый HTTP запрос application сервер запускает некоторый обработчик в приложении. Это может быть функция, класс или прогармма, в зависимости от технологии.

	Протоколы запуска приложения
- Servlets и др. специализированное API
- mod_peri, mod_python, mod_php
- CGI
- FastCGI
- SCGI
- PSGI, WSGI, Rack.

  CGI - Common Gateway Interface
- Метод, QueryString, заголовки запроса - через переменные окружения.
- Тело запроса передается через STDIN
- Заголовки и тело ответа возвращаются через STDOUT
- HTTP код ответа передаётся через псевдозаголовок Status
- Поток ошибок STDERR направляется в лог ошибок сервера.
//подразумевает что приложение запускается в виде отдельного процесса

	Переменные окружения CGI
- REQUEST_METHOD - метод запроса (Get/Post)
- PATH_INFO - путь из URL (часть фрагмента от имени сервена до имени файла).
- QUERY_STRING - фрагмент URL после ? (передача параметров)
- REMOTE_ADDR - IP адрес пользователя
- CONTENT_LENGTH - длинна тела запроса
- HTTP_COOKIE - Заголовок Cookie
- HTTP_ANY_HEADER_NAME - любой другой HTTP заголовок.
//решает проблему производительности, но приложение по прежнему запускается в виде отдельного процесса

	FastCGI & SCGI
 Основная проблема CGI - низкая производительность. Протоколы FastCGI  и SCGI призваны решить эту проблему путём демонизации приложения. Иногда это возможно сделать даже без изменения кода CGI приложения.

Приложение должно запускаться в одном процессе вместе с application-сервером
	WSGI( для python) - актуальный протокол
 WSGI, PSGI, Rack - протоколы вызова функции обработчика из application сервера. Сам applicaton server  при этом может выполняться в отдельном процессе или совпадать с web сервером.
Как правило, при использовании этих протоколов в качестве application сервера выступает отдельный легковесный процесс.

	Web Server Gateaway Interface
- Обработчик - функция или класс(callable)
- Метод, QueryString, заголовки запроса - через аргумент environ
- Тело запроса передаётся через file-handle wsgi.input
- HTTP код ответа и заголовки ответа передаются через вызов функции start_response
- Тело ответа возвращает в виде списка (iterable) из обработчика 
- Поток ошибок должен быть направлен в file-handle wsgi.stderr.

	Переменные словаря environ
- CGI-like переменные REQUEST_URI, ...
- wsgi.version - версия wsgi протокола
- wsgi.url_scheme - схема текущего URL:https или http
- wsgi.input - file-handle для чтения тела запроса
- wsgi.errors - file-handle для вывода ошибок
- wsgi.multithreaded - ... когда приложение находится в multithreaded окружении. 
- wsgi.multipricess - ... когда приложение работает в multipricess 

	На приложение ложится
- Анализ PATH_INFO и выбор конкретного обработчика
- Разбор конкретных заголовков, например Cookie
- Разбор QUERY_STRING
- Разбор тела запроса:
  - x-www-form-urlencoded
  - multipart/form-data
- Вывод правильных заголовков ответа 

 














