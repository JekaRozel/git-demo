	Epam Jenkins. Components Integranion
	CI - Continuous Integration непрерывная интеграция. Подразумевает интеграцию в основной код (приложение), с предварительным прохождением всех необходимых тестов, сразу после коммита
	Необходимые условия: ниличие гита(или аналога), автоматизированная сборка, автоматизированные тесты, очень частые коммиты, автоматическая пересборка после каждого коммита.
	CD - Continuous Delivery - непревное внедрение. CI(интеграция в код) + сразу Доставка (на раздачу пользователям).
	Сам Jenkins установленный на windows работает в службах win+r services.msc, перезагрузка приозводится здесь.
jekaroze 1q2w3e4r5t6y7
jenkins  это служба windows. win+r sirvices.msc
при установке оставили 
dasborad view
workspace Cleanup
junit
pipeline
build pipeline
piarameterized trigger
copy artifact
git
matrix project
ssh slaves
windows slaves
mailer
iteno
Основные триггеры: on-demand по клику, other job finished по завершении другой задачи, Cron schedule расписание cron, SCM check это git
 CRON выражения * любой, /5 который делится нацело на 5, можно указывать через запятую или дефис
           /\/\/\/\/\/\/\/\/\/\
	JetBrains Java
Since Java 11, you can write var

	Linux wifi
ifconfig. 
sudo apt install net-tools -y

 HKLM\SYSTEM\CurrentControlSet\control\TimeZoneInformation /v RealTimelsUniversal /t REG_QWORD /d 1                                                        sc config w32time start= disabled    

 при установке арча  к иксам (к основному xorg) надо ещё установить 
xorg-xinit xterm 
	/\/\/\/\/\/\/\
		Основы информатики
  Информация - это сведения, знания и   сообщения,получаемые человеком из разных источников.
 Информация должна быть:
  достоверной, понятной,актуальной, полной, полезной
 По методам передачи :
 видимая - визуальная
 звукавая - аудиальная
 ощущаемая - тактильная
 запах вкус - органолептическая
 и машинная
  Любая информация - передаваемый сигнал ( sign - знак, символ) передаётся либо веществом(рисунок, гены), либо энергией(свет, звук). 
  Сигнал может быть непрерывным(аналоговым) или прерывистым(дискретным)
  Аналоговый сигнал непрерывно изменяется по амплитуде и во времени.
  Дискретный - сигнал который может принимать лишь конечное число значений в конечное число моментов времени.
 Информационные процессы:
  -Хранение.
  -Передача. Каналы передачи данных делятся на: 
   1)Симплексные(в одну сторону)
   2)Полудуплексные(в 2 направления попеременно)
   3)Дуплексные (по 2 направлениям сразу)
  -Обработка информации.
  -Защита информации.
   Информатика - наука изучающая свойства информации а также способы  представления, накопления, обработки и передачи информации с помощью технических средств.
 Есть 3 направления: теоритическое, практическое и техническое.
  Бит - минимальная единица измерения информации. 1 Байт = 8 Бит (2^8 = 256 возможных значений, символов).
  1Килобайт(Кб) = 1024 байт(2^10)
  1Мегабайт(Мб) = 1048576 (2^20) байт и т.д.
  
  Дижитализируй Postgresql
  Html Css javascript - base
  реляционные базы данных от слова - relation (связь, отношение)
  Cущность (antity) - что-то о чём надо хранить информацию в базе данных
  У сущности есть свои поля
  Сущность - таблица, поля - столбцы
  ERD - черновая/первичная схема на бумаге
  left/right join - отображать только те поля которые есть в левой/правой таблице  
  inner join - отображать только те поля которые есть в обеих таблицах.
  create database; create table; forigen key; select from; join; group by; having; order by; limit; offset; coalesce(null, 0)  
  
  Java Habr interviu questions
  HashCode это битовая строка фиксированной (/int для java) длины, полученная из массива произвольной длины(/неограниченное кол-во возможных объектов) (википедия). В java она представлена в виде числа примитивного типа int, который равен 4-м байтам, и может помещать числа от -2 147 483 648 до 2 147 483 647.
  
    для одного и того-же объекта, хеш-код всегда будет одинаковым; 
    если объекты одинаковые, то и хеш-коды одинаковые (но не наоборот)
    если хеш-коды равны, то входные объекты не всегда равны (коллизия); 
    если хеш-коды разные, то и объекты гарантированно разные; 
    Eclipse это Source → Generate hashCode() and equals()...
  
  Collections:
  ArrayList это список, реализованный на основе массива, а LinkedList — это классический связный список, основанный на объектах с ссылками между ними. 
  Преимущества ArrayList: в возможности доступа к произвольному элементу по индексу за постоянное время (так как это массив), минимум накладных расходов при хранении такого списка, вставка в конец списка в среднем производится так же за постоянное время. Кроме случаев окгда массив переполняется и создаётся новый размером (n * 3) / 2 + 1.(расширение массива занимает значительно больше времени чем просто добавление элемента в готовую пустую ячейку). . Удаление последнего элемента происходит за константное время. Недостатки ArrayList проявляются при вставке/удалении элемента в середине списка — это взывает перезапись всех элементов размещенных «правее» в списке на одну позицию влево, кроме того, при удалении элементов размер массива не уменьшается, до явного вызова метода trimToSize().
  LinkedList наоборот, за постоянное время может выполнять вставку/удаление элементов в списке (поиск позиции вставки и удаления сюда не входит). Доступ к произвольному элементу осуществляется за линейное время (но доступ к первому и последнему элементу списка всегда осуществляется за константное время — ссылки постоянно хранятся на первый и последний, так что добавление элемента в конец списка вовсе не значит, что придется перебирать весь список в поисках последнего элемента). В целом же, LinkedList в абсолютных величинах проигрывает ArrayList и по потребляемой памяти и по скорости выполнения операций. LinkedList предпочтительно применять, когда происходит активная работа (вставка/удаление) с серединой списка или в случаях, когда необходимо гарантированное время добавления элемента в список.
 В 90% случае ArrayList будет быстрее и экономичнее LinkedList, так что обычно используют ArrayList, 
  При удалении произвольного элемента из списка, все элементы находящиеся «правее» смещаются на одну ячейку влево и реальный размер массива (его емкость, capacity) не изменяется никак. Механизм автоматического «расширения» массива существует, а вот автоматического «сжатия» нет, можно только явно выполнить «сжатие» командой trimToSize().
  6. Предложите эффективный алгоритм удаления нескольких рядом стоящих элементов из середины списка, реализуемого ArrayList.
  	---Допустим нужно удалить n элементов с позиции m в списке. Вместо выполнения удаления одного элемента n раз (каждый раз смещая на 1 позицию элементы, стоящие «правее» в списке), нужно выполнить смещение всех элементов, стоящих «правее» n+m позиции на n элементов левее к началу списка. Таким образом, вместо выполнения n итераций перемещения элементов списка, все выполняется за 1 проход.
7. Как устроена HashMap?  HashMap состоит из «корзин» (bucket`ов). С технической точки зрения «корзины» — это элементы массива, которые хранят ссылки на списки элементов. При добавлении новой пары ключ-значение, вычисляет хеш-код ключа, на основании которого вычисляется номер корзины (номер ячейки массива), в которую попадет новый элемент. Если корзина пустая, то в нее сохраняется ссылка на вновь добавляемый элемент, если же там уже есть элемент, то происходит последовательный переход по ссылкам между элементами в цепочке, в поисках последнего элемента, от которого и ставится ссылка на вновь добавленный элемент. Если в списке был найден элемент с таким же ключом, то он заменяется. Добавление, поиск и удаление элементов выполняется за константное время. Вроде все здорово, с одной оговоркой, хеш-функций должна равномерно распределять элементы по корзинам, в этом случае временная сложность для этих 3 операций будет не ниже lg N, а в среднем случае как раз константное время.
Какое начальное количество корзин в HashMap? - 16 Отвечая, стоит заметить, что можно используя конструкторы с параметрами: через параметр capacity задавать свое начальное количество корзин.
  Какая оценка временной сложности выборки элемента из HashMap? константное время необходимо для выборки элемента. 
  Гарантирует ли HashMap указанную сложность выборки элемента? нет, не гарантируется. Если хеш-функция постоянно будет возвращать одно и то же значение, то HashMap превратится в связный список, с отвратной производительностью. Затем даже, если вы будете использовать хеш-функцию с равномерным распределением, в предельном случае гарантироваться будет только временная сложность lg N. 
 Роль equals и hashCode в HashMap? hashCode позволяет определить корзину для поиска элемента, а equals используется для сравнения ключей элементов в списке внутри корзины и искомого ключа.
  Максимальное число значений hashCode()?  равно диапазону типа int — 2^32 
   Как и когда происходит увеличение количества корзин в HashMap?  Помимо capacity в HashMap есть еще параметр loadFactor, на основании которого, вычисляется предельное количество занятых корзин (capacity*loadFactor). По умолчанию loadFactor = 0,75. По достижению предельного значения, число корзин увеличивается в 2 раза. Для всех хранимых элементов вычисляется новое «местоположение» с учетом нового числа корзин.
  Почему нельзя использовать byte[] в качестве ключа в HashMap?  хеш-код массива не зависит от хранимых в нем элементов, а присваивается при создании массива, Так же у массивов не переопределен equals и выполняет сравнение указателей. Это приводит к тому, что обратиться к сохраненному с ключом-массивом элементу не получится при использовании другого массива такого же размера и с такими же элементами, доступ можно осуществить лишь в одном случае — при использовании той же самой ссылки на массив, что использовалась для сохранения элемента. ??? ничё не понял.
  В чем отличия TreeSet и HashSet?  Set — множество (так же называют «набором»), оно не допускает хранение двух одинаковых элементов. Формально говоря, термин «множество» и так обозначает совокупность различных элементов, очень важно, что именно различных элементов, так как это главное свойство Set.      TreeSet обеспечивает упорядоченно хранение элементов в виде красно-черного дерева. Сложность выполнения основных операций в TreeSet lg N. HashSet использует для хранения элементов такой же подход, что и HashMap, за тем отличием, что в HashSet в качестве ключа выступает сам элемент, кроме того HashSet (как и HashMap) не поддерживает упорядоченное хранение элементов и обеспечивает временную сложность выполнения операций аналогично HashMap.
 Устройство TreeSet? здесь достаточно краткого ответа, что TreeSet основан на красно-черном дереве. 
 Что будет, если добавлять элементы в TreeSet по возрастанию?   в основе TreeSet лежит красно-черное дерево, которое умеет само себя балансировать. В итоге, TreeSet все равно в каком порядке вы добавляете в него элементы, преимущества этой структуры данных будут сохраняться.
   \/\/\/\/\/\/\/\/
   Сборщик мусора — это низкоприоритетный процесс, который запускается периодически и освобождает память, использованную объектами, которые больше не нужны.
  
  
  
  
  
  
  
  
  
  
sudo apt-get install bluetooth bluez bluez-tools blueman
sudo rfkill list
sudo rfkill unblock bluetooth
sudo hciconig hci0 up
sudo hcitool scan
сайт "техничка" 
  
  
  
  
  
  
  
  
  
 Это список сайтов указанных на Андерсоне:
Codecademy, Udacity, Code School, Treehouse, FreeCodeCamp, Udemy, Coursera, Codewars, Codingame, Khan Academy, edX, W3Schools, Hackr.io, Bento.io, Solo Learn, Codeasy.net, Edabit, GITHUB, Sitepoint, Crunchzilla, One Month, LearnCode. Academy, Thenewboston, Derek Banas, Programming Knowledge, Softwarehow, Marksheet, Shay Howe, NodeSchool, Learn JS, JavaScript.com, LeetCode, Skillbox, Нетология, Geekbrains, SkillFactory, HTML Academy, Hexlet, JavaRush и другие.
