	Папки:
/bin скомпилированные (установленные) бинарные программы
/boot загрузчик
/dev устройства
/etc файлы настроек
/home папки пользователей
/init инициализация
/lib библиотеки (библиотека - часть программы, одинаковая для разных программ)
/media подключённая флешка, медиа устройства
/mnt подключённые файловые системы, диски
/opt 
/proc устройства и файлы с которыми работает ядро
/root папка суперпользователя
/run запущенные процессы создают  *.pid (process ID)(идентификаторы процесса) файлы через которые ими можно управлять
/sbin файлы которые запускаются как программы (аналог папки /bin)
/srv серверные приложения
/sys системная папка
/tmp временные файлы 
/usr настройки пользователя ?
/var тоже временные файлы ?(переменные)
 /tmp - совсем временно /var - не очень временно

перенаправление потока в листаемый вид : ls | less
 
три потока stdin stdout stderr

socet файл через котоырй программы могут общаться друг с другом
 
su - switch user
Лекции линукс.
rm -rf/ патч бармена - удалить всё от корня
AAA :
 Authentification - проверна подлинности, правильности пары логин-пароль
 Authorization - предоставление прав доступа в соответствии с какими-то критериями (членство в группе и т.д.)
 Accounting - сохранение информации о деятельности пользователя.
Осмотреться в системе: whoami, groups, id, echo $USER, env(переменные среды окружения). hostname, pwd, ls -la, uname -a, df -h, free -h, w/who, find(locate)
 количество файлов которые можнозаписать на диск не может превышать кол-во inode-ов в файловой системе. df -i, 
inode - индексный дескриптор, хранит мета-информацию о файле: права, ссылки на области данных, размер, владелец, даты модификации Ctime(мета-информации) Mtime(сожерфимаого файла) Atime(доступа).
 w(who) - кто работает сейчас параллельно с тобой; wall послать им сообщени (от root)
 pushd/popd/dirs
 echo 'public key' >> authorizedKeys (добавляем на сервер в файл authorizedKeys свой public key ssh)
 Основные ресурсы системы: 
1 CPU частота, кол-во ядер, процессорное время
2 Диски IOPS(операции ввода-вывода), объём, на сервере - интерфейс SATA/SAS
3 Память RAM, SWAP(оперативная память расположенная на медленных дисках)
 порты ниже 1024 только для рута
  IP
 A mask 255.  0.  0.0 /255 - N сети 0 - host
 B mask 255.255.  0.0 /255 - N сети 0 - host
 C mask 255.255.255.0 /255 - N сети 0 - host
 
 диапазон номеров сетей
 A 1.0.0.0-126.0.0.0; 
 B 128.0.0.0-191.255.0.0; 
 C 192.255.0.0-223.255.255.0

 Hosts:
 A 256^3=16,500,000
 B 256^2=65,000
 C 256-2=254	
 
 \
 Linux wifi
ifconfig. 
sudo apt install net-tools -y

 HKLM\SYSTEM\CurrentControlSet\control\TimeZoneInformation /v RealTimelsUniversal /t REG_QWORD /d 1                                                        sc config w32time start= disabled    
 
chmod u+w добавить права за запись всем
chmod g-w забрать права на запись у всех
х - выполнение r - чтение w - запись
u - собственник g-группа владелец o - другие a - все

chown [OPTIONS] USER FILE изменить владельца файла
<<<<<<< HEAD
монтироавние NTFS для записи
sudo pacman -S ntfs-3g
mount -t ntfs-3g /dev/sdb1 /mnt

запустьть невыполняющееся приложение(или действие)
Check if immutable flag is set on .bash_profile:
lsattr .bash_profile
You can remove it with:
chattr -i .bash_profile

chmode +x fiel.sh делаем испольняемым file.sh


	grep -inr {string} найти строку в любом файле этой директории или дочерних директориях
	column -s, -t <delimited_file> отобразить разделенный запятыми файл в виде столбцов
	ssh {username}@{hostname} соединиться с удалённой машиной
	tree -LhaC 3 показать структуру директории на 3 уровнями вглубь (с размерами файлов и включая скрытые директории)
	pip install --user {pip_package} пакетный менеджер Python для установки пакетов в ~/.local/bin
	pushd . ; popd ; dirs; cd - push/pop/view директорию в стек + изменить обратно на последнюю директорию
	sed -i "s/{find}/{replace}/g" {file} заменить строку в файле
	find . -type f -name '*.txt' -exec sed -i "s/{find}/{replace}/g" {} \; заменить строку для каждого файла в этой и дочерней папках с именем типа *.txt
	tmux new -s session, tmux attach -t session создать новую сессию терминала без создания нового окна [продвинутый уровень]
	wget {link} загрузить веб-страницу или веб-ресурс
	curl -X POST -d "{key: value}" http://www.google.com отправить HTTP-запрос на веб-сервер
	find <directory> вывести список всего содержимого директории и её дочерних директорий рекурсивно
    lsof -i :8080 вывести список дескрипторов открытых файлов (-i — флаг для сетевых интерфейсов)
    netstat | head -n20 вывести список открытых интернет/UNIX сокетов и связанной с ними информации
    dstat -a транслировать текущий диск, сеть, активность CPU и другое
    nslookup <IP address> найти hostname для удалённого IP-адреса
    strace -f -e <syscall> <cmd> отследить системные вызовы программы (-e — флаг для фильтрования конкретных системных вызовов)
    ps aux | head -n20 вывести текущие активные процессы
    file <file> проверить тип файла (например исполняемый, бинарный, текстовый файл с кодировкой ASCII)
    uname -a информация о ядре ОС
    lsb_release -a информация об ОС
    hostname проверить hostname текущего компьютера (например, название, чтобы другие компьютеры могли иметь доступ к вашему)
    pstree визуализировать форки процессов
    time <cmd> исполнить команду и составить статистику о том, сколько времени потребовалось на исполнение
    CTRL + z ; bg; jobs; fg отправить процесс в текущий tty в background и обратно на передний план
    cat file.txt | xargs -n1 | sort | uniq -c посчитать количество уникальных слов в файле
    wc -l <file> количество строк в файле
    du -ha показать размер на диске для директорий и их содержимого
    zcat <file.gz> вывести содержимое заархивированного текстового файла
    scp <user@remote_host> <local_path> скопировать файл с удалённого на локальный сервер или наоборот
    man {command} показать инструкцию, (т.е. документацию) для команды (но скорее всего легче использовать Google)
=======
Абсолютный путь — это полный путь начиная от корня, в нашем случае /, а относительный — это путь, начинающийся от нашей текущей рабочей директории. если первым символом в пути идёт /, то это абсолютный путь, иначе — относительный
Кроме двух точек иногда используется одинарная точка, означающая текущую директорию.
 /etc содержит конфигурацию программ в обычных текстовых файлах (в юниксах нет реестра, вся конфигурация лежит в обычных файлах), а каталог /home содержит домашние директории пользователей системы (исключением является суперпользователь root, его домашний каталог обычно находится по адресу /root)
 Кроме регулярных файлов, в *nix существует ряд других:
Hard Link — дополнительное имя для уже существующего файла.
Symbolic link — символическая ссылка, такой файл похож на ярлык в Windows. Если удалить основной файл, то символическая ссылка начнёт вести в никуда.
Socket — специальный файл через который происходит взаимодействие между разными процессами операционной системы. Программисты постоянно сталкиваются с сокетами в реальной жизни.
 Самый простой способ прочитать файл — команда cat.
 head показывает первые 10 строк, а tail — последние 10 строк файла. Это поведение можно менять, задавая желаемое количество строк через опцию -n. -f не просто выводит последние строчки файла, но ждёт появления новых. 
 Самый распространённый пейджер (открывает файл только в режиме чтения) называется less. q — выход f — вперёд на страницу b — назад на страницу, если набрать /, затем начать вводить буквы и нажать Enter, то выполнится поиск введённого текста. Перемещение по найденным совпадениям выполняется командой n (переход к следующему совпадению) и командой N (переход к предыдущему совпадению).
 grep (global regular expression print), выполняющей поиск по файлу или файлам определённого текста. -B, -A и -C (и кол-во строк). Если ищем в папке -R dir, -n string number
  Для редактирования файлов в командной строке используют редакторы Nano, Vim и Emacs.  
 При старте любой программы операционная система связывает с ней три так называемых потока: STDIN (Standard Input), STDOUT (Standard Output) и STDERR (Standard Error). 
ls -la > file перенаправление потоков(запись результата команды в файл file) (>перезаписать >>дописать)
$ wc -l < result > output посчитать кол-во строк в файле result результат записать в output
# Сначала STDERR перенаправляется в STDOUT, затем STDOUT в файл
$ cd lala > output 2>&1
2 в данном случае обозначает номер потока. В POSIX за каждым потоком закреплён определённый номер, который является файловым дескриптором, если быть точным: STDIN — 0, STDOUT — 1, STDERR — 2. Конструкцию 2>&1 нужно просто запомнить, она говорит о том, что поток с номером 2 отправляем в поток с номером 1. # Оба потока, STDERR и STDOUT, перенаправляются в файл
$ cd lala &> output
| — этот символ называется пайп, он указывает шеллу взять STDOUT одного процесса, и соединить его с STDIN другого процесса. $ cat file | grep word | uniq | sort ( вывести из файла file слова word без дублей отсортировать)
Пайплайн стал основой философии Unix, которая звучит так:
Пишите программы, которые делают что-то одно и делают это хорошо.
Пишите программы, которые бы работали вместе.
Пишите программы, которые бы поддерживали текстовые потоки, поскольку это универсальный интерфейс. (концепция универсальных интерфейсов основана на принципе лего).
// sort file | head -2 (сортировать по алфавиту и вывести 2 первых строки)
 touch - Основная задача утилиты поменять время последнего доступа к файлу, но она обладает побочным эффектом. Если файла не существует, то он будет создан
 mkdir -p one/two/three создание сразу вложенных папок
 rm -rf one удаление папки и всего содержимого без вопросов
 env переменные окружения. Основное предназначение переменных окружения — конфигурирование системы и программ.
 HOME=/tmp - изменение переменной для конкретного запуска
 export HOME=/tmp - глобальное изменение переменной
изменение происходит в рамках текущей сессии, другими словами, если у вас открыто две вкладки терминала, и в каждой загружен bash, то изменение произойдёт только в той вкладке, в которой будет выполнена команда.
 history | grep mplayer
$ whoami
$ ps aux //(process status)
$ id //identificator
$ cat /etc/passwd 
имя*пароль*UID*GID*инф.опольз-ле*домдир*shell
sudo (substitute user and do — дословно "подменить пользователя и выполнить")
sudo -u otheruser mkdir /tmp/test
sudo -i //root
поиск исполняемого файла на диске:
whereis, which
почти все директории, в которых хранятся исполняемые файлы программ, оканчиваются на bin. Это общее соглашение. Запуск файла через ./файл
>>>>>>> cbd0b4cb1cffbf4b14c6515ebd05053c07ce427c


	/\/\/\/\/\/\/\
	
	
	Переключение рабочего окружения
	sudo update-alternatives --config x-session-manager
	
